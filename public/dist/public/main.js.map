{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body{\\n    background-color: aliceblue;\\n    font-family: sans-serif;\\n}\\n\\n\"","module.exports = \"<style>\\n  body{\\n    background-color: black;\\n    color: aquamarine;\\n  }\\n  div{\\n    /* outline: dotted red 1px; */\\n    margin: 5px;\\n    padding: 10px;\\n  }\\n\\n  .showall{\\n    margin: 10px;\\n  }\\n  .single-task{\\n    border: 5px black solid;\\n    margin: 5px;\\n  }\\n\\n</style>\\n\\n<h1>Restful Tasks API!</h1>\\n\\n<button (click)='getTasksFromService()'>Click for All Tasks</button><br>\\n\\n<div *ngIf='showAll'> \\n  <button (click)='hideAll()'>Hide All Tasks</button>\\n  <div *ngFor=\\\"let task of allTasks\\\" class=\\\"single-task\\\">\\n    <h3>{{task.title}}</h3>\\n      <a href=\\\"#editTask\\\">\\n        <button (click)='getTaskById(task._id)'>Show Info</button>\\n      </a>\\n      <button (click)='deleteTaskById(task._id)'>Delete</button>\\n  </div>\\n  \\n  <app-task *ngIf='oneTask' [taskToShow]='oneTask' id=\\\"editTask\\\"></app-task>\\n\\n</div>\\n  <hr>\\n    <!-- use the json pipe to see how newTask changes in real time -->\\n<h2>Add a new task below!</h2>\\n<form (submit)=\\\"createTask()\\\">\\n  Title: <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\" /><br>\\n  Description: <input type=\\\"text\\\" name=\\\"newTask.desc\\\" [(ngModel)]=\\\"newTask.desc\\\" /><br>\\n  <input type=\\\"submit\\\" value=\\\"Create Task\\\"/>\\n</form>\\n<!-- <p> {{ newTask | json }} </p> -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n// this page is the controller!!!!\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  allTasks:any;\n  oneTask:any;\n  newTask:any;\n  oldTask:any;\n  formTask:any;\n  showAll:boolean;\n  // showInfo:boolean;\n  // showEdit:boolean;\n\n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit(){\n    console.log('***ngOnInit***');\n    this.newTask = {\n      title:\"\",\n      desc:\"\"\n    };\n    this.oldTask = {\n      title:\"\",\n      desc:\"\"\n    };\n    this.showAll = false;\n  }\n\n  hideAll(){\n    // this.getTasksFromService();\n    this.showAll = !this.showAll;\n  }\n\n  getTasksFromService(){\n    // this._httpService.getTasks();\n    this.showAll = true\n    let obs = this._httpService.getTasks();\n    obs.subscribe(data=>{\n      // console.log(\"Thank you for your subscription!\",data);\n      this.allTasks = data;\n      console.log(this.allTasks);\n    });\n  }\n\n  getTaskById(id){\n    // if(this.showInfo == true){\n    //   this.showInfo = true;\n    // }else if(this.showInfo == false){\n    //   this.showInfo = true;\n    // }\n    this._httpService.getTasks();\n    // this.showInfo = !this.showInfo\n    let obs = this._httpService.getTaskById(id);\n    obs.subscribe(data=>{\n      // console.log(\"Thank you for your subscription!\",data);\n      this.oneTask = data;\n      this.oldTask = data;\n    });\n    console.log(\"LOOK AT THIS ONE\",this.oneTask);\n  }\n\n  // getFormInput(id){\n  //   this.showEdit = !this.showEdit;\n  //   let obs = this._httpService.getTaskById(id);\n  //   obs.subscribe(data=>{\n  //     // console.log(\"Thank you for your subscription!\",data);\n  //     this.oldTask = data;\n  //     // console.log(this.formTask.title,this.formTask.)\n  //     console.log('back from the server',data);\n  //     // this.oldTask.title = data.\n  //   });\n  // }\n\n  createTask(){\n    this._httpService.createATask(this.newTask).subscribe(data=>{\n      console.log(data);\n    });\n    this.getTasksFromService();\n    this.ngOnInit();\n    this.showAll=true;\n  }\n\n  deleteTaskById(id){\n    this._httpService.deleteATask(id).subscribe(data=>{\n      console.log(data);\n      console.log('task '+id+' is about to get the AXE!');\n    });\n    this.getTasksFromService();\n  }\n\n  // editTask(id){\n  //   this._httpService.editATask(id,this.oldTask).subscribe(data=>{\n  //     // console.log(id);\n  //     // console.log(data);\n  //     console.log('task '+this.oneTask._id+' is about to get the REVAMPED!');\n  //   });\n  //   this.getTasksFromService();\n  //   this.getTaskById(id);\n  //   this.showEdit = false;\n  //   this.showInfo = false;\n  //   this.showInfo = true;\n  //   // setTimeout(this.showInfo = true,3000);\n  //   // this.hideAll();\n  //   // setTimeout(this.getTasksFromService,2000);\n  // }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { TaskComponent } from './task/task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { \n    // this.getTasks();\n    // this.getTaskById();\n  }\n  getTasks(){\n    // our http response is an Observable, store it in a variable\n    return this._http.get('/api/tasks');\n    // subscribe to the Observable and provide the code we would like to do with our data from the response\n    // tempObservable.subscribe(data=>console.log(\"***WE'VE GOT THE DATA!***\",data))\n  }\n  getTaskById(id){\n    return this._http.get('/api/tasks/'+id);\n  }  \n  createATask(task){\n    return this._http.post('/api/tasks',task);\n  }\n  deleteATask(id){\n    return this._http.delete('/api/delete/'+id);\n  }\n  editATask(id,task){\n    return this._http.put('/api/update/'+id,task);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <p>\\n  task works!\\n</p> -->\\n<div>\\n    <h3>Task Info:</h3> \\n    <p>ID: {{ taskToShow._id }}</p>\\n    <p>Title: {{ taskToShow.title }}</p>\\n    <p>Description: <em>\\\"{{ taskToShow.desc }}\\\"</em></p>\\n    <button (click)='getFormInput(taskToShow._id)'>Edit this task?</button>\\n\\n    <div *ngIf='showEdit'>\\n      <form (submit)=\\\"editTask(taskToShow._id)\\\">\\n        <h3>Edit this task below:</h3>\\n        Title:<input type=\\\"text\\\" name=\\\"oldTask.title\\\" [(ngModel)]=\\\"oldTask.title\\\" /><br>\\n        Description:<input type=\\\"text\\\" name=\\\"oldTask.desc\\\" [(ngModel)]=\\\"oldTask.desc\\\" /><br>\\n        <input type=\\\"submit\\\" value=\\\"Edit Task\\\"/>\\n      </form>\\n    </div>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { AppComponent } from '../app.component';\n\n// import { Input } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  showInfo:boolean;\n  showEdit:boolean;\n  oldTask:any;\n\n\n  @Input() taskToShow: any\n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.oldTask = {\n      title:\"\",\n      desc:\"\"\n    };\n    this.showEdit = false;\n  }\n\n  editTask(id){\n    this._httpService.editATask(id,this.oldTask).subscribe(data=>{\n      console.log('task '+this.taskToShow._id+' is about to get the REVAMPED!');\n    });\n    this.showEdit = false;\n    // this.showInfo = false;\n    alert('You just edited this task!');\n\n    // this.showInfo = true;\n    // AppComponent.getTasksFromService();\n    // this.getFormInput(id);\n  }\n\n  getFormInput(id){\n    console.log(id);\n    this.showEdit = !this.showEdit;\n    let obs = this._httpService.getTaskById(id);\n    obs.subscribe(data=>{\n      console.log('back from the server',data);\n      // this.taskToShow = data;\n      this.oldTask = data;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}